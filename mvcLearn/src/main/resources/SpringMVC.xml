<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 自动扫描包 -->
    <context:component-scan base-package="com.lulu.mvc"/>

    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring6.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring6.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver">
                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>

                        <!--由于thymeleaf-spring6中templateMode使用的是枚举对象了-->
                        <property name="templateMode" ref="html"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="html" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
        <property name="staticField" value="org.thymeleaf.templatemode.TemplateMode.HTML" />
    </bean>

    <!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>


    <!--设置view-controller-->
    <!--若不设置注解驱动，则其他注解全部失效-->
<!--    <mvc:view-controller path="view/" view-name="view/index"/>-->
    <mvc:view-controller path="restful/toAdd" view-name="restful/employee_add"/>
    <mvc:view-controller path="converter" view-name="converter/index"/>
    <mvc:view-controller path="interceptor" view-name="interceptor/index"/>

    <!--解析jsp文件，直接使用转发视图，属性好像不对-->
    <!--<bean class="org.springframework.web.servlet.view.InternalResourceView">
        <property name="prefix" value="/WEB-INF/templates/"/>
        <property name="suffix" value=".jsp"/>
    </bean>-->

    <!--
   处理静态资源，例如html、js、css、jpg
  若只设置该标签，则只能访问静态资源，其他请求则无法访问
  此时必须设置<mvc:annotation-driven/>解决问题
 -->
    <mvc:default-servlet-handler/>

    <!-- 开启mvc注解驱动 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <!-- 处理响应中文内容乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="defaultCharset" value="UTF-8" />
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html</value>
                        <value>application/json</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--配置拦截器-->
    <mvc:interceptors>
        <!--对所有请求进行拦截-->
        <!--<bean class="com.lulu.mvc.interceptor.FirstInterceptor"/>-->
        <!--或者是采用这种方式进行配置-->
        <!--<ref bean="firstInterceptor"/>-->

        <!--以上都是对所有请求进行拦截，下面这个可以设置拦截路径-->
        <mvc:interceptor>
            <mvc:mapping path="/interceptor/*"/>
            <!--*仅一层目录，但是**则是所有-->
            <mvc:mapping path="/converter/*"/>
            <!--<mvc:exclude-mapping path="/"/>-->
            <bean class="com.lulu.mvc.interceptor.FirstInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!--配置异常处理-->
    <!--<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.ArithmeticException">error</prop>
                <prop key="java.lang.NullPointerException">error</prop>
            </props>
        </property>
        <property name="exceptionAttribute" value="exception"/>
    </bean>-->
</beans>